root.dir: ${ROOT_DIR:D:\temp\communication-situation\}
server:
  port: ${SERVER_PORT:8082}
#root: # 部署程序目录，必须/结尾
#  dir: ./
java:
  version: 1.8

# 在列名上加单引号 多数据源兼容时适配， 1 (mysql)查询字段表名上加 `` , 2(达梦)查询字段表名上加 “”
flagwind.mybatis.name-quote: 1

spring:
  application:
    name: communication-situation
  aop:
    proxy-target-class: true
  datasource:
    driver-class-name: ${DATASOURCE_DRIVER:com.mysql.cj.jdbc.Driver}
    url: jdbc:mysql://${DATASOURCE_URL:127.0.0.1:3306/communication-situation}?serverTimezone=Asia/Shanghai&allowMultiQueries=true&autoReconnect=true&failOverReadOnly=false&useUnicode=true&characterEncoding=utf8&nullCatalogMeansCurrent=true
    username: ${DATASOURCE_USERNAME:root}
    password: ${DATASOURCE_PASSWORD:egova}

    #hikari数据源特性配置
    type: com.zaxxer.hikari.HikariDataSource
    # hikari动态数据源是手动创建的，不要用中横线命名，否则下面配置无法识别
    hikari:
      maximumPoolSize: 1000 #最大连接数,默认值10.
      minimumIdle: 200 #最小空闲连接，默认值10.
      connectionTimeout: 60000 #连接超时时间(毫秒),默认值30秒.
      #空闲连接超时时间，默认值600000(10分钟),只有空闲连接数大于最大连接数且空闲时间超过该值，才会被释放
      #如果大于等于 max-lifetime 且 max-lifetime>0,则会被重置为0.
      idleTimeout: 600000
      maxLifetime: 3000000 #连接最大存活时间,默认值30分钟.设置应该比mysql设置的超时时间短
      connectionTestQuery: select 1 #连接测试查询

  liquibase:
    change-log: classpath:/liquibase/master.xml
    enabled: true
  redis:
    host: ${REDIS_URL:127.0.0.1}
    port: ${REDIS_PORT:6379}
    database: 12
    password: ${REDIS_PASSWORD:}
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        max-wait: 10s
        min-idle: 0
      shutdown-timeout: 1s
  servlet:
    multipart:
      enabled: true # 默认支持文件上传
      file-size-threshold: 1MB # 文件大小超过后写入磁盘
      location: ${root.dir}tmp # 上传文件的临时目录
      max-file-size: ${MULTIPART_MAX_FILE_SIZE:300MB} # 最大支持文件大小
      max-request-size: ${MULTIPART_MAX_REQUEST_SIZE:512MB} # 最大支持请求大小
  session:
    store-type: redis

egova:
  upload:
    # 文件上传的存储目录
    root-dir: ${EGOVA_UPLOAD_ROOT_DIR:${root.dir}files}
    # 文件上传的网络请示地址
    request-url: ${EGOVA_UPLOAD_REQUEST_URL:files}
  minio:
    accesskey: ${EGOVA_MINIO_ACCESSKEY:AKIAIOSFODNN7EXAMPLE}
    endpoints: ${EGOVA_MINIO_ENDPOINTS:http://192.168.101.40:30011}
    secretkey: ${EGOVA_MINIO_SECRETKEY:wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY}
  pan:
    tenantStrategy: PLATFORM # 租户级策略com.egova.pan.config.PanProperties.Strategy,主要看代码里面使用egova-sharing-pan-base模块时，传递的tenantId是哪种
  quartz: #定时任务启动开关
    enabled: true
  security:
    front-end-encrypted: false

logging:
  level:
    com:
      egova:
        ddcat:
          task: ERROR
        audit:
          record:
            domain:
              box: DEBUG
        establish:
          webpage:
            domain: DEBUG
        rest:
          domain: DEBUG
    root: INFO
  file:
    name: logs/situation.log

org:
  quartz:
    properties:
      path: /quartz.yml

receive:
  tenant:
    strategy:
      global: true
