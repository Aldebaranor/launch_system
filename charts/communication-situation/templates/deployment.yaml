kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: { { .Release.Name } }
  labels:
  { { include "service.labels.standard" . | indent 4 } }
spec:
  replicas: { { .Values.replicaCount } }
  selector:
    matchLabels:
  { { include "service.match.labels" . | indent 6 } }
strategy:
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 1
  type: RollingUpdate
template:
  metadata:
    labels:
  { { include "service.labels.standard" . | indent 8 } }
spec:
  containers:
    - name: { { .Release.Name } }
      image: "{{ .Values.image.repository }}:{{ .Chart.Version }}"
      imagePullPolicy: { { .Values.image.pullPolicy } }
      env:
  { { - range $name, $value := .Values.env.open } }
  { { - if not (empty $value) } }
- name: { { $name | quote } }
  value: { { $value | quote } }
  { { - end } }
  { { - end } }
ports:
  - name: http
    containerPort: { { .Values.config.port } }
    protocol: TCP
resources:
  { { toYaml .Values.resources | indent 12 } }
volumeMounts:
  - name: font
    mountPath: /usr/share/fonts
  - name: temp
    mountPath: /egova-apps/tmp
  - name: files
    mountPath: /egova-apps/files
volumes:
  - name: font
    nfs:
      server: 192.168.101.40
      path: /u01/prod/fonts
  - name: temp
    nfs:
      server: 192.168.101.40
      path: /u01/prod/egova-apps/tmp
  - name: files
    nfs:
      server: 192.168.101.40
      path: /u01/prod/egova-apps/files
dnsPolicy: ClusterFirst
restartPolicy: Always
schedulerName: default-scheduler
securityContext: { }
terminationGracePeriodSeconds: 30
revisionHistoryLimit: 3
minReadySeconds: 0